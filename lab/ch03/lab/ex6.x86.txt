Machine Language Programming & Instruction Encoding Exercise

Code from page 135 (assuming starting at mem loc 0):

Assembly:
0000:     mov   cx, 0
0003: a:  get
0004:     put
0005:     add   ax, ax
0006:     put
0007:     add   ax, ax
0008:     put
0009:     add   ax, ax
000A:     put
000B:     add   cx, 1
000E:     cmp   cx, 4
0011:     jb    a
0014:     halt

Machine Code (binary): 
0000:     1101 0111 0000 0000 0000 0000     mov   cx, 0
0003: a:  0000 0110                         get
0004:     0000 0111                         put
0005:     1010 0000                         add   ax, ax
0006:     0000 0111                         put
0007:     1010 0000                         add   ax, ax
0008:     0000 0111                         put
0009:     1010 0000                         add   ax, ax
000A:     0000 0111                         put
000B:     1011 0111 0000 0001 0000 0000     add   cx, 1
000E:     0111 0111 0000 0100 0000 0000     cmp   cx, 4
0011:     0000 1010 0000 0011 0000 0000     jb    a
0014:     0000 0101                         halt

Machine Code (hex): 
0000:     D7 00 00     mov   cx, 0
0003: a:  06           get
0004:     07           put
0005:     A0           add   ax, ax
0006:     07           put
0007:     A0           add   ax, ax
0008:     07           put
0009:     A0           add   ax, ax
000A:     07           put
000B:     B7 01 00     add   cx, 1
000E:     77 04 00     cmp   cx, 4
0011:     0A 03 00     jb    a
0014:     05           halt
